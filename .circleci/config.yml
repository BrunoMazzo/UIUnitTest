# Couldn't automatically generate a config from your source code.
# This is a generic template to serve as a base for your custom config
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  macos: circleci/macos@2.5.1
jobs: # a basic unit of work in a run
  build:
    machine: true
    resource_class: brunomazzo/macos
    steps:
      - run: echo "Hi I'm on a Container Runner!"
  test: # your job name
    machine: true
    resource_class: brunomazzo/macos
    steps: # a series of commands to run
      - checkout  # pull down code from your version control system.
      - restore_cache:
          key: spm-cache-{{ checksum "Client/Client.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved" }}
      - run:
          name: Check env
          command: env
      - run: brew install xcbeautify
      - macos/preboot-simulator:
          version: "18.1"
          platform: "iOS"
          device: "iPhone 16"
      - run:
          name: Run Unit Tests
          command: set -o pipefail && xcodebuild -project Client/Client.xcodeproj -scheme Client test -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.1' -resultBundlePath test-result.xcresult -clonedSourcePackagesDirPath SourcePackages -disableAutomaticPackageResolution | xcbeautify --report junit
      - save_cache:
          paths:
            - SourcePackages/
          key: spm-cache-{{ checksum "Client/Client.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved" }}
      - store_test_results:
          path: build/reports/junit.xml
      - store_artifacts:
          path: Client/.uiUnitTest/Logs
          destination: UIUnitTestLogs
      - run:
          name: Compress XCResult
          command: tar -cvzf test-result.tar test-result.xcresult
      - store_artifacts:
          path: test-result.tar
          destination: Tests-results
      - store_artifacts:
          path: build/reports/junit.xml
          destination: jUnit-tests-results.xml
  test-parallel: # your job name
    macos:
      xcode: 16.1.0 # indicate your selected version of Xcode
    steps: # a series of commands to run
      - checkout  # pull down code from your version control system.
      - restore_cache:
          key: spm-cache-{{ checksum "Client/Client.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved" }}
      - run: brew install xcbeautify
      - macos/preboot-simulator:
          version: "18.1"
          platform: "iOS"
          device: "iPhone 16"
      - run:
          name: Run Unit Tests
          command: NSUnbufferedIO=YES xcodebuild -project Client/Client.xcodeproj -scheme "ClientTests - Parallel" test -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.1' -resultBundlePath test-result.xcresult -clonedSourcePackagesDirPath SourcePackages -disableAutomaticPackageResolution -parallel-testing-enabled YES -parallel-testing-worker-count 2 2>&1 | xcbeautify --report junit
      - save_cache:
          paths:
            - SourcePackages/
          key: spm-cache-{{ checksum "Client/Client.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved" }}
      - store_test_results:
          path: build/reports/junit.xml
      - store_artifacts:
          path: Client/.uiUnitTest/Logs
          destination: Parallel-UIUnitTestLogs
      - run:
          name: Compress XCResult
          command: tar -cvzf test-result.tar test-result.xcresult
      - store_artifacts:
          path: test-result.tar
          destination: Parallel-tests-results
      - store_artifacts:
          path: build/reports/junit.xml
          destination: Parallel-jUnit-tests-results.xml 

workflows:
  tests:
    jobs:
      - test
      - test-parallel
  localmachine:
    jobs:
      - build
