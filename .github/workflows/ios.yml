name: iOS tests

on:
  push:
    branches: [ "main", "parallel-testing" ]
  pull_request:

jobs:
  parallel-testing:
    name: Cloned simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build & Test
        env:
          scheme: 'Client'
          platform: ${{ 'iOS Simulator' }}
        timeout-minutes: 20
        run: |
          # Get iPhone 15 iOS 17.0 UUID
          deviceUUID=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone 15.*\(17\.0\).*' |  grep -oE '([[A-F0-9]{4}\-?)*' | head -1 `

          set -o pipefail && NSUnbufferedIO=YES xcodebuild -project Client/Client.xcodeproj  -scheme Client -sdk 'iphonesimulator' -destination "platform=iOS Simulator,id=$deviceUUID" -parallel-testing-enabled YES -parallel-testing-worker-count 2 test 2>&1 | xcbeautify --renderer github-actions
      # - name: Archive cli logs
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: cli-logs-clone-simulator
      #     path: Client/logfile.txt
  single-device-testing:
    name: Normal simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build & Test
        env:
          scheme: 'Client'
          platform: ${{ 'iOS Simulator' }}
        timeout-minutes: 20
        run: |
          # Get iPhone 15 iOS 17.0 UUID
          deviceUUID=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone 15.*\(17\.0\).*' |  grep -oE '([[A-F0-9]{4}\-?)*' | head -1 `

          #run UIUnitTest server
          set -o pipefail && NSUnbufferedIO=YES xcodebuild -project Client/Client.xcodeproj  -scheme Client -sdk 'iphonesimulator' -destination "platform=iOS Simulator,id=$deviceUUID" test 2>&1 | xcbeautify --renderer github-actions
      # - name: Archive cli logs
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: cli-logs-single-simulator
      #     path: Client/logfile.txt
