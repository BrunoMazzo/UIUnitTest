name: iOS starter workflow

on:
  push:
    branches: [ "main", "parallel-testing" ]
  pull_request:

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install mint and xcbeautify
        run: |
          brew install mint
          brew install xcbeautify
      - name: Select Xcode version
        run: sudo xcode-select -switch '/Applications/Xcode_14.3.1.app'
      - name: Build & Test
        env:
          scheme: 'Client'
          platform: ${{ 'iOS Simulator' }}
        timeout-minutes: 15
        run: |
          # Debug device list
          xcrun xctrace list devices

          xcrun simctl list

          # xcrun simctl --set testing list

          mint install BrunoMazzo/UIUnitTest@parallel-testing --force

          # Get iPhone 14 iOS 16.4 UUID
          deviceUUID=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone 14.*\(16\.4\).*' |  grep -oE '([[A-F0-9]{4}\-?)*' | head -1 `

          mint run BrunoMazzo/UIUnitTest@parallel-testing stop-command

          mint run BrunoMazzo/UIUnitTest@parallel-testing start-server-command --device-identifier "${deviceUUID}" --device-name "iPhone 14" --os-version "16.4"

          mint run BrunoMazzo/UIUnitTest@parallel-testing monitor-for-new-devices-command --device-name "iPhone 14" --os-version "16.4" --verbose  &

          #run UIUnitTest server
          mint install BrunoMazzo/UIUnitTest@parallel-testing
          set -o pipefail && NSUnbufferedIO=YES xcodebuild -project Client/Client.xcodeproj  -scheme Client -sdk 'iphonesimulator' -destination "platform=iOS Simulator,id=$deviceUUID" -parallel-testing-enabled YES test 2>&1 | xcbeautify --renderer github-actions

          xcrun simctl list

          xcrun simctl --set testing list
      - name: Archive cli logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cli-logs
          path: Client/logfile.txt
